Amazon Kinesis Data Streams is a massively scalable, highly durable data ingestion and processing service optimized for streaming data. You can configure hundreds of thousands of data producers to continuously put data into a Kinesis data stream. Data will be available within milliseconds to your Amazon Kinesis applications, and those applications will receive data records in the order they were generated.

The purpose of resharding in Amazon Kinesis Data Streams is to enable your stream to adapt to changes in the rate of data flow. You split shards to increase the capacity (and cost) of your stream. You merge shards to reduce the cost (and capacity) of your stream.

One approach to resharding could be to split every shard in the stream—which would double the stream’s capacity. However, this might provide more additional capacity than you actually need and therefore create unnecessary cost.


You can also use metrics to determine which are your “hot” or “cold” shards, that is, shards that are receiving much more data, or much less data, than expected. You could then selectively split the hot shards to increase capacity for the hash keys that target those shards. Similarly, you could merge cold shards to make better use of their unused capacity.

You can obtain some performance data for your stream from the Amazon CloudWatch metrics that Kinesis Data Streams publishes. However, you can also collect some of your own metrics for your streams. One approach would be to log the hash key values generated by the partition keys for your data records. Recall that you specify the partition key at the time that you add the record to the stream.



# Kinesis Data Stream
- streaming service to ingest at scale
- real-time (~200 ms)
- data retention from 1 to 365 days
- support replay capability
- you write custom code for producer and consumer
- not AWS managed(you facilitate shard splitting and merging)


# Kinesis Firehose
- load streaming data in:
    - AWS services - S3, RedShift, ElasticSearch
    - 3rd-Party partner - New Relic, Splunk, DataDog, MongoDB, etc.
    - custom HTTP endpoints
- fully AWS managed (automatic scaling)
- near real-time (min. buffer time: 60 sec)
- no data storage
- doesn't support replay capability


# Kinesis Data Analytics
- perform real-time analytics on Kinesis streams using SQL
- fully AWS managed(no server provisions, auto scaling)
- real-time analytics
- pay only consumption rate
- can create streams out of the real-time queries

`Use cases:`
- real-time dashboards
- real-time metrics
- time-series analytics